{"version":3,"sources":["./node_modules/@tinkoff/angular-contenteditable-accessor/__ivy_ngcc__/fesm2015/tinkoff-angular-contenteditable-accessor.js","./src/app/bitacora/nota/nota.page.ts","./src/app/bitacora/nota/nota-routing.module.ts","./src/app/bitacora/nota/nota.module.ts","./src/app/bitacora/nota/nota.page.html"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmD;AAC0D;;AAE7G;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,wCAAwC,2BAA2B;AACnE;AACA;AACA;AACA;AACA;AACwC;AACxC;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,sFAAsF,gDAAgD,+DAAwB,CAAC,wDAAU,GAAG,+DAAwB,CAAC,uDAAS,GAA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","file":"nota-nota-module.js","sourcesContent":["import { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Directive, ElementRef, forwardRef, HostListener, Inject, Renderer2, NgModule } from '@angular/core';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/*\n * This is a barebones contenteditable {@link ControlValueAccessor} allowing you to use\n * Angular forms with native contenteditable HTML. For security reasons you might want\n * to consider sanitizing pasted/dropped content before using it. Also make sure that\n * you do not set any dangerous content as control value yourself, because directive\n * just outputs control value as-is.\n */\nimport * as ɵngcc0 from '@angular/core';\nclass ContenteditableValueAccessor {\n    /**\n     * @param {?} elementRef\n     * @param {?} renderer\n     */\n    constructor(elementRef, renderer) {\n        this.elementRef = elementRef;\n        this.renderer = renderer;\n        /*\n             * MutationObserver IE11 fallback (as opposed to input event for modern browsers).\n             * When mutation removes a tag, i.e. delete is pressed on the last remaining character\n             * inside a tag — callback is triggered before the DOM is actually changed, therefore\n             * setTimeout is used\n             */\n        this.observer = new MutationObserver((/**\n         * @return {?}\n         */\n        () => {\n            setTimeout((/**\n             * @return {?}\n             */\n            () => {\n                this.onChange(ContenteditableValueAccessor.processValue(this.elementRef.nativeElement.innerHTML));\n            }));\n        }));\n        /*\n             * onTouch callback that marks control as touched and allows FormHooks use\n             */\n        this.onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        /*\n             * onChange callback that writes value to control and allows FormHooks use\n             */\n        this.onChange = (/**\n         * @return {?}\n         */\n        () => { });\n    }\n    /*\n         * To support IE11 MutationObserver is used to monitor changes to the content\n         */\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        this.observer.observe(this.elementRef.nativeElement, {\n            characterData: true,\n            childList: true,\n            subtree: true,\n        });\n    }\n    /*\n         * Disconnect MutationObserver IE11 fallback on destroy\n         */\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.observer.disconnect();\n    }\n    /*\n         * Listen to input events to write innerHTML value into control,\n         * also disconnect MutationObserver as it is not needed if this\n         * event works in current browser\n         */\n    /**\n     * @return {?}\n     */\n    onInput() {\n        this.observer.disconnect();\n        this.onChange(ContenteditableValueAccessor.processValue(this.elementRef.nativeElement.innerHTML));\n    }\n    /*\n         * Listen to blur event to mark control as touched\n         */\n    /**\n     * @return {?}\n     */\n    onBlur() {\n        this.onTouched();\n    }\n    /*\n         * Reacts to external change\n         *\n         * @see {@link ControlValueAccessor#writeValue}\n         */\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        this.renderer.setProperty(this.elementRef.nativeElement, 'innerHTML', ContenteditableValueAccessor.processValue(value));\n    }\n    /*\n         * Registers onChange callback\n         *\n         * @see {@link ControlValueAccessor#registerOnChange}\n         */\n    /**\n     * @param {?} onChange\n     * @return {?}\n     */\n    registerOnChange(onChange) {\n        this.onChange = onChange;\n    }\n    /*\n         * Registers onTouch callback\n         *\n         * @see {@link ControlValueAccessor#registerOnTouched}\n         */\n    /**\n     * @param {?} onTouched\n     * @return {?}\n     */\n    registerOnTouched(onTouched) {\n        this.onTouched = onTouched;\n    }\n    /*\n         * Sets disabled state by setting contenteditable attribute to true/false\n         *\n         * @see {@link ControlValueAccessor#setDisabledState}\n         */\n    /**\n     * @param {?} disabled\n     * @return {?}\n     */\n    setDisabledState(disabled) {\n        this.renderer.setAttribute(this.elementRef.nativeElement, 'contenteditable', String(!disabled));\n    }\n    /*\n         * null and other falsy control values are treated as empty string to\n         * prevent IE11 outputting 'null', also single <br> is replaced with empty\n         * string when passed to the control\n         */\n    /**\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    static processValue(value) {\n        /** @type {?} */\n        const processed = value || '';\n        return processed.trim() === '<br>' ? '' : processed;\n    }\n}\nContenteditableValueAccessor.ɵfac = function ContenteditableValueAccessor_Factory(t) { return new (t || ContenteditableValueAccessor)(ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(Renderer2)); };\nContenteditableValueAccessor.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ContenteditableValueAccessor, selectors: [[\"\", \"contenteditable\", \"\", \"formControlName\", \"\"], [\"\", \"contenteditable\", \"\", \"formControl\", \"\"], [\"\", \"contenteditable\", \"\", \"ngModel\", \"\"]], hostBindings: function ContenteditableValueAccessor_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"input\", function ContenteditableValueAccessor_input_HostBindingHandler() { return ctx.onInput(); })(\"blur\", function ContenteditableValueAccessor_blur_HostBindingHandler() { return ctx.onBlur(); });\n    } }, features: [ɵngcc0.ɵɵProvidersFeature([\n            {\n                provide: NG_VALUE_ACCESSOR,\n                useExisting: forwardRef(( /**\n                 * @return {?}\n                 */() => ContenteditableValueAccessor)),\n                multi: true\n            },\n        ])] });\n/** @nocollapse */\nContenteditableValueAccessor.ctorParameters = () => [\n    { type: ElementRef, decorators: [{ type: Inject, args: [ElementRef,] }] },\n    { type: Renderer2, decorators: [{ type: Inject, args: [Renderer2,] }] }\n];\nContenteditableValueAccessor.propDecorators = {\n    onInput: [{ type: HostListener, args: ['input',] }],\n    onBlur: [{ type: HostListener, args: ['blur',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ContenteditableValueAccessor, [{\n        type: Directive,\n        args: [{\n                selector: '[contenteditable][formControlName], [contenteditable][formControl], [contenteditable][ngModel]',\n                providers: [\n                    {\n                        provide: NG_VALUE_ACCESSOR,\n                        useExisting: forwardRef(( /**\n                         * @return {?}\n                         */() => ContenteditableValueAccessor)),\n                        multi: true\n                    },\n                ]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef, decorators: [{\n                type: Inject,\n                args: [ElementRef]\n            }] }, { type: ɵngcc0.Renderer2, decorators: [{\n                type: Inject,\n                args: [Renderer2]\n            }] }]; }, { \n    /*\n         * Listen to input events to write innerHTML value into control,\n         * also disconnect MutationObserver as it is not needed if this\n         * event works in current browser\n         */\n    /**\n     * @return {?}\n     */\n    onInput: [{\n            type: HostListener,\n            args: ['input']\n        }], \n    /*\n         * Listen to blur event to mark control as touched\n         */\n    /**\n     * @return {?}\n     */\n    onBlur: [{\n            type: HostListener,\n            args: ['blur']\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ContenteditableValueAccessorModule {\n}\nContenteditableValueAccessorModule.ɵfac = function ContenteditableValueAccessorModule_Factory(t) { return new (t || ContenteditableValueAccessorModule)(); };\nContenteditableValueAccessorModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ContenteditableValueAccessorModule });\nContenteditableValueAccessorModule.ɵinj = ɵngcc0.ɵɵdefineInjector({});\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ContenteditableValueAccessorModule, { declarations: [ContenteditableValueAccessor], exports: [ContenteditableValueAccessor] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ContenteditableValueAccessorModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [ContenteditableValueAccessor],\n                exports: [ContenteditableValueAccessor]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { ContenteditableValueAccessor, ContenteditableValueAccessorModule };\n\n//# sourceMappingURL=tinkoff-angular-contenteditable-accessor.js.map","import { DOCUMENT } from '@angular/common';\nimport {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  Inject,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { WINDOW } from '@ng-web-apis/common';\nimport { Observable, Subject } from 'rxjs';\nimport {\n  filter,\n  map,\n  shareReplay,\n  switchMap,\n  take,\n  takeUntil,\n} from 'rxjs/operators';\nimport { BitacoraService } from '../bitacora.service';\nimport { Nota } from '../nota.interface';\n\n@Component({\n  selector: 'app-nota',\n  templateUrl: './nota.page.html',\n})\nexport class NotaPage implements OnInit, OnDestroy {\n  nota$: Observable<Nota> = this.route.paramMap.pipe(\n    map((paramMap) => paramMap.get('notaId')),\n    switchMap((notaId) => this.bitacoraService.obtenerNota(notaId)),\n    shareReplay()\n  );\n\n  form: FormGroup = this.fb.group({\n    titulo: ['', Validators.required],\n    contenido: ['', Validators.required],\n  });\n\n  @ViewChild('divContenido')\n  private divContenido: ElementRef<HTMLDivElement>;\n  @ViewChild('divTitulo')\n  private divTitulo: ElementRef<HTMLDivElement>;\n\n  private destroy$: Subject<void> = new Subject<void>();\n\n  constructor(\n    private route: ActivatedRoute,\n    private bitacoraService: BitacoraService,\n    private fb: FormBuilder,\n    private router: Router,\n    @Inject(DOCUMENT) private document: Document,\n    @Inject(WINDOW) private window: Window\n  ) {}\n\n  ngOnInit() {\n    this.nota$\n      .pipe(take(1))\n      .subscribe((nota) => this.form.patchValue(nota || {}));\n    this.form\n      .get('contenido')\n      .valueChanges.pipe(\n        takeUntil(this.destroy$),\n        filter((v) => !v)\n      )\n      .subscribe(() => this.enfocarTitulo());\n  }\n\n  guardar(): void {\n    this.nota$\n      .pipe(\n        take(1),\n        switchMap(({ id }) => {\n          if (!id) {\n            return this.bitacoraService.agregarNota(this.form.value);\n          } else {\n            return this.bitacoraService.editarNota(id, this.form.value);\n          }\n        })\n      )\n      .subscribe(() =>\n        this.router.navigate(['..'], { relativeTo: this.route })\n      );\n  }\n\n  enfocarContenido() {\n    const range = this.document.createRange();\n    const selection = this.window.getSelection();\n    if (this.divContenido.nativeElement.lastChild) {\n      range.setStart(\n        this.divContenido.nativeElement.lastChild,\n        this.divContenido.nativeElement.lastChild.textContent.length\n      );\n      range.collapse(true);\n\n      selection.removeAllRanges();\n      selection.addRange(range);\n    } else {\n      this.divContenido.nativeElement.focus();\n    }\n  }\n\n  enfocarTitulo() {\n    const range = this.document.createRange();\n    const selection = this.window.getSelection();\n    if (this.divTitulo.nativeElement.lastChild) {\n      range.setStart(\n        this.divTitulo.nativeElement.lastChild,\n        this.divTitulo.nativeElement.lastChild.textContent.length\n      );\n      range.collapse(true);\n\n      selection.removeAllRanges();\n      selection.addRange(range);\n    } else {\n      this.divTitulo.nativeElement.focus();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { NotaPage } from './nota.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: NotaPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class NotaPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { NotaPageRoutingModule } from './nota-routing.module';\n\nimport { NotaPage } from './nota.page';\nimport { ContenteditableValueAccessorModule } from '@tinkoff/angular-contenteditable-accessor';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    NotaPageRoutingModule,\n    ContenteditableValueAccessorModule,\n    SharedModule,\n  ],\n  declarations: [NotaPage],\n})\nexport class NotaPageModule {}\n","export default \"<ng-container *ngIf=\\\"nota$ | async as nota\\\">\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button\\n        text=\\\"\\\" defaultHref=\\\"/bitacora\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button [disabled]=\\\"form.invalid\\\" (click)=\\\"guardar()\\\"\\n        >Guardar</ion-button\\n      >\\n    </ion-buttons>\\n  </ion-toolbar>\\n  <ion-content>\\n    <div class=\\\"p-4 h-full flex max-w-full\\\" [formGroup]=\\\"form\\\">\\n      <ion-text color=\\\"tertiary\\\" class=\\\"flex-1 flex flex-col max-w-full\\\">\\n        <div class=\\\"flex flex-1 flex-col border rounded max-w-full\\\">\\n          <div\\n            class=\\\"\\n              p-2\\n              focus-visible:outline-none\\n              text-4xl\\n              font-bold\\n              max-w-full\\n              whitespace-pre-wrap\\n            \\\"\\n            #divTitulo\\n            contenteditable\\n            formControlName=\\\"titulo\\\"\\n            (keydown.enter)=\\\"$event.preventDefault(); enfocarContenido()\\\"\\n          ></div>\\n          <div\\n            #divContenido\\n            class=\\\"\\n              flex-1\\n              p-2\\n              focus-visible:outline-none\\n              max-w-full\\n              whitespace-pre-wrap\\n            \\\"\\n            contenteditable\\n            formControlName=\\\"contenido\\\"\\n          ></div>\\n        </div>\\n        <p class=\\\"text-xs\\\">{{nota.fecha | date}}</p>\\n      </ion-text>\\n    </div>\\n  </ion-content>\\n</ng-container>\\n\";"],"sourceRoot":"webpack:///"}